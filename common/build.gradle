plugins {
    id "com.github.johnrengelman.shadow" version "8.1.1"
    id "maven-publish"
}

loom {
    accessWidenerPath = file("src/main/resources/dawn-config.accessWidener")
}

configurations {
    shadowCommon
}

dependencies {
    minecraft "com.mojang:minecraft:${rootProject.architectury.minecraft}"
    mappings loom.officialMojangMappings()
    // We depend on fabric loader here to use the fabric @Environment annotations
    // Do NOT use other classes from fabric loader
    modImplementation "net.fabricmc:fabric-loader:${rootProject.fabric_loader_version}"

    compileOnly("com.electronwill.night-config:core:${project.night_config_version}")
    compileOnly("com.electronwill.night-config:toml:${project.night_config_version}")
    shadowCommon("com.electronwill.night-config:core:${project.night_config_version}")
    shadowCommon("com.electronwill.night-config:toml:${project.night_config_version}")
}

architectury {
    common("fabric")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = "sources"
    from sourceSets.main.allSource
}

shadowJar {
    relocate "com.electronwill.nightconfig.core", "${rootProject.maven_group}.shadowed.com.electronwill.nightconfig.core"
    relocate "com.electronwill.nightconfig.toml", "${rootProject.maven_group}.shadowed.com.electronwill.nightconfig.toml"

    configurations = [project.configurations.shadowCommon]
    archiveClassifier = "shadow"
}

remapJar {
    dependsOn(shadowJar)
    input.set(shadowJar.archiveFile)
    archiveClassifier = null

    from rootProject.file("LICENSE")
}
